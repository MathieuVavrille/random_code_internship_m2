ZERO(x_0_0_0);
NOT_ZERO(x_0_0_1);
ZERO(x_0_0_2);
ZERO(x_0_0_3);
ZERO(x_0_1_0);
NOT_ZERO(x_0_1_1);
ZERO(x_0_1_2);
ZERO(x_0_1_3);
ZERO(x_0_2_0);
ZERO(x_0_2_1);
NOT_ZERO(x_0_2_2);
ZERO(x_0_2_3);
ZERO(x_0_3_0);
ZERO(x_0_3_1);
ZERO(x_0_3_2);
NOT_ZERO(x_0_3_3);
NOT_ZERO(x_1_0_0);
ZERO(x_1_0_1);
ZERO(x_1_0_2);
ZERO(x_1_0_3);
ZERO(x_1_1_0);
ZERO(x_1_1_1);
ZERO(x_1_1_2);
ZERO(x_1_1_3);
ZERO(x_1_2_0);
ZERO(x_1_2_1);
ZERO(x_1_2_2);
ZERO(x_1_2_3);
ZERO(x_1_3_0);
ZERO(x_1_3_1);
ZERO(x_1_3_2);
ZERO(x_1_3_3);
ZERO(x_2_0_0);
ZERO(x_2_0_1);
ZERO(x_2_0_2);
ZERO(x_2_0_3);
ZERO(x_2_1_0);
ZERO(x_2_1_1);
ZERO(x_2_1_2);
ZERO(x_2_1_3);
ZERO(x_2_2_0);
ZERO(x_2_2_1);
ZERO(x_2_2_2);
ZERO(x_2_2_3);
ZERO(x_2_3_0);
ZERO(x_2_3_1);
ZERO(x_2_3_2);
ZERO(x_2_3_3);
ZERO(k_0_0_3);
ZERO(k_0_1_3);
ZERO(k_0_2_3);
ZERO(k_0_3_3);
ZERO(k_1_0_3);
ZERO(k_1_1_3);
ZERO(k_1_2_3);
ZERO(k_1_3_3);
ZERO(k_2_0_3);
ZERO(k_2_1_3);
ZERO(k_2_2_3);
ZERO(k_2_3_3);
XOR(xinit_0_0, k_0_0_0, x_0_0_0);
XOR(xinit_0_1, k_0_0_1, x_0_0_1);
XOR(xinit_0_2, k_0_0_2, x_0_0_2);
XOR(xinit_0_3, k_0_0_3, x_0_0_3);
XOR(xinit_1_0, k_0_1_0, x_0_1_0);
XOR(xinit_1_1, k_0_1_1, x_0_1_1);
XOR(xinit_1_2, k_0_1_2, x_0_1_2);
XOR(xinit_1_3, k_0_1_3, x_0_1_3);
XOR(xinit_2_0, k_0_2_0, x_0_2_0);
XOR(xinit_2_1, k_0_2_1, x_0_2_1);
XOR(xinit_2_2, k_0_2_2, x_0_2_2);
XOR(xinit_2_3, k_0_2_3, x_0_2_3);
XOR(xinit_3_0, k_0_3_0, x_0_3_0);
XOR(xinit_3_1, k_0_3_1, x_0_3_1);
XOR(xinit_3_2, k_0_3_2, x_0_3_2);
XOR(xinit_3_3, k_0_3_3, x_0_3_3);
SB(x_0_0_0, sx_0_0_0);
SB(x_0_0_1, sx_0_0_1);
SB(x_0_0_2, sx_0_0_2);
SB(x_0_0_3, sx_0_0_3);
SB(x_0_1_0, sx_0_1_0);
SB(x_0_1_1, sx_0_1_1);
SB(x_0_1_2, sx_0_1_2);
SB(x_0_1_3, sx_0_1_3);
SB(x_0_2_0, sx_0_2_0);
SB(x_0_2_1, sx_0_2_1);
SB(x_0_2_2, sx_0_2_2);
SB(x_0_2_3, sx_0_2_3);
SB(x_0_3_0, sx_0_3_0);
SB(x_0_3_1, sx_0_3_1);
SB(x_0_3_2, sx_0_3_2);
SB(x_0_3_3, sx_0_3_3);
MC(sx_0_0_0, sx_0_1_1, sx_0_2_2, sx_0_3_3, z_0_0_0, z_0_1_0, z_0_2_0, z_0_3_0);
MC(sx_0_0_1, sx_0_1_2, sx_0_2_3, sx_0_3_0, z_0_0_1, z_0_1_1, z_0_2_1, z_0_3_1);
MC(sx_0_0_2, sx_0_1_3, sx_0_2_0, sx_0_3_1, z_0_0_2, z_0_1_2, z_0_2_2, z_0_3_2);
MC(sx_0_0_3, sx_0_1_0, sx_0_2_1, sx_0_3_2, z_0_0_3, z_0_1_3, z_0_2_3, z_0_3_3);
SB(k_0_0_3, sk_0_0_3);
SB(k_0_1_3, sk_0_1_3);
SB(k_0_2_3, sk_0_2_3);
SB(k_0_3_3, sk_0_3_3);
XOR(z_0_0_0, k_1_0_0, x_1_0_0);
XOR(z_0_0_1, k_1_0_1, x_1_0_1);
XOR(z_0_0_2, k_1_0_2, x_1_0_2);
XOR(z_0_0_3, k_1_0_3, x_1_0_3);
XOR(z_0_1_0, k_1_1_0, x_1_1_0);
XOR(z_0_1_1, k_1_1_1, x_1_1_1);
XOR(z_0_1_2, k_1_1_2, x_1_1_2);
XOR(z_0_1_3, k_1_1_3, x_1_1_3);
XOR(z_0_2_0, k_1_2_0, x_1_2_0);
XOR(z_0_2_1, k_1_2_1, x_1_2_1);
XOR(z_0_2_2, k_1_2_2, x_1_2_2);
XOR(z_0_2_3, k_1_2_3, x_1_2_3);
XOR(z_0_3_0, k_1_3_0, x_1_3_0);
XOR(z_0_3_1, k_1_3_1, x_1_3_1);
XOR(z_0_3_2, k_1_3_2, x_1_3_2);
XOR(z_0_3_3, k_1_3_3, x_1_3_3);
SB(x_1_0_0, sx_1_0_0);
SB(x_1_0_1, sx_1_0_1);
SB(x_1_0_2, sx_1_0_2);
SB(x_1_0_3, sx_1_0_3);
SB(x_1_1_0, sx_1_1_0);
SB(x_1_1_1, sx_1_1_1);
SB(x_1_1_2, sx_1_1_2);
SB(x_1_1_3, sx_1_1_3);
SB(x_1_2_0, sx_1_2_0);
SB(x_1_2_1, sx_1_2_1);
SB(x_1_2_2, sx_1_2_2);
SB(x_1_2_3, sx_1_2_3);
SB(x_1_3_0, sx_1_3_0);
SB(x_1_3_1, sx_1_3_1);
SB(x_1_3_2, sx_1_3_2);
SB(x_1_3_3, sx_1_3_3);
MC(sx_1_0_0, sx_1_1_1, sx_1_2_2, sx_1_3_3, z_1_0_0, z_1_1_0, z_1_2_0, z_1_3_0);
MC(sx_1_0_1, sx_1_1_2, sx_1_2_3, sx_1_3_0, z_1_0_1, z_1_1_1, z_1_2_1, z_1_3_1);
MC(sx_1_0_2, sx_1_1_3, sx_1_2_0, sx_1_3_1, z_1_0_2, z_1_1_2, z_1_2_2, z_1_3_2);
MC(sx_1_0_3, sx_1_1_0, sx_1_2_1, sx_1_3_2, z_1_0_3, z_1_1_3, z_1_2_3, z_1_3_3);
SB(k_1_0_3, sk_1_0_3);
SB(k_1_1_3, sk_1_1_3);
SB(k_1_2_3, sk_1_2_3);
SB(k_1_3_3, sk_1_3_3);
XOR(k_1_0_0,k_0_0_0, sk_0_1_3);
XOR(k_1_1_0,k_0_1_0, sk_0_2_3);
XOR(k_1_2_0,k_0_2_0, sk_0_3_3);
XOR(k_1_3_0,k_0_3_0, sk_0_0_3);
XOR(k_1_0_1, k_1_0_0, k_0_0_1);
XOR(k_1_0_2, k_1_0_1, k_0_0_2);
XOR(k_1_0_3, k_1_0_2, k_0_0_3);
XOR(k_1_1_1, k_1_1_0, k_0_1_1);
XOR(k_1_1_2, k_1_1_1, k_0_1_2);
XOR(k_1_1_3, k_1_1_2, k_0_1_3);
XOR(k_1_2_1, k_1_2_0, k_0_2_1);
XOR(k_1_2_2, k_1_2_1, k_0_2_2);
XOR(k_1_2_3, k_1_2_2, k_0_2_3);
XOR(k_1_3_1, k_1_3_0, k_0_3_1);
XOR(k_1_3_2, k_1_3_1, k_0_3_2);
XOR(k_1_3_3, k_1_3_2, k_0_3_3);
XOR(z_1_0_0, k_2_0_0, x_2_0_0);
XOR(z_1_0_1, k_2_0_1, x_2_0_1);
XOR(z_1_0_2, k_2_0_2, x_2_0_2);
XOR(z_1_0_3, k_2_0_3, x_2_0_3);
XOR(z_1_1_0, k_2_1_0, x_2_1_0);
XOR(z_1_1_1, k_2_1_1, x_2_1_1);
XOR(z_1_1_2, k_2_1_2, x_2_1_2);
XOR(z_1_1_3, k_2_1_3, x_2_1_3);
XOR(z_1_2_0, k_2_2_0, x_2_2_0);
XOR(z_1_2_1, k_2_2_1, x_2_2_1);
XOR(z_1_2_2, k_2_2_2, x_2_2_2);
XOR(z_1_2_3, k_2_2_3, x_2_2_3);
XOR(z_1_3_0, k_2_3_0, x_2_3_0);
XOR(z_1_3_1, k_2_3_1, x_2_3_1);
XOR(z_1_3_2, k_2_3_2, x_2_3_2);
XOR(z_1_3_3, k_2_3_3, x_2_3_3);
SB(x_2_0_0, sx_2_0_0);
SB(x_2_0_1, sx_2_0_1);
SB(x_2_0_2, sx_2_0_2);
SB(x_2_0_3, sx_2_0_3);
SB(x_2_1_0, sx_2_1_0);
SB(x_2_1_1, sx_2_1_1);
SB(x_2_1_2, sx_2_1_2);
SB(x_2_1_3, sx_2_1_3);
SB(x_2_2_0, sx_2_2_0);
SB(x_2_2_1, sx_2_2_1);
SB(x_2_2_2, sx_2_2_2);
SB(x_2_2_3, sx_2_2_3);
SB(x_2_3_0, sx_2_3_0);
SB(x_2_3_1, sx_2_3_1);
SB(x_2_3_2, sx_2_3_2);
SB(x_2_3_3, sx_2_3_3);
SB(k_2_0_3, sk_2_0_3);
SB(k_2_1_3, sk_2_1_3);
SB(k_2_2_3, sk_2_2_3);
SB(k_2_3_3, sk_2_3_3);
XOR(k_2_0_0,k_1_0_0, sk_1_1_3);
XOR(k_2_1_0,k_1_1_0, sk_1_2_3);
XOR(k_2_2_0,k_1_2_0, sk_1_3_3);
XOR(k_2_3_0,k_1_3_0, sk_1_0_3);
XOR(k_2_0_1, k_2_0_0, k_1_0_1);
XOR(k_2_0_2, k_2_0_1, k_1_0_2);
XOR(k_2_0_3, k_2_0_2, k_1_0_3);
XOR(k_2_1_1, k_2_1_0, k_1_1_1);
XOR(k_2_1_2, k_2_1_1, k_1_1_2);
XOR(k_2_1_3, k_2_1_2, k_1_1_3);
XOR(k_2_2_1, k_2_2_0, k_1_2_1);
XOR(k_2_2_2, k_2_2_1, k_1_2_2);
XOR(k_2_2_3, k_2_2_2, k_1_2_3);
XOR(k_2_3_1, k_2_3_0, k_1_3_1);
XOR(k_2_3_2, k_2_3_1, k_1_3_2);
XOR(k_2_3_3, k_2_3_2, k_1_3_3);
&